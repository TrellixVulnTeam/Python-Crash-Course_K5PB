与大多数编程概念一样，要熟练使用字典，也需要一段时间的练习。
使用字典一段时间后，你就会明白为何它们能够高效的模拟现实生活中的情形。

在Python中，字典是一系列键-值对。
每个键都与一个值相关联，你可以使用键来访问与之相关联的值。
与键相关联的值可以是数字、字符串、列表乃至字典。
事实上，可将任何Python对象用作字典中的值。
在Python中，字典用放在花括号{}中的一系列键-值对表示。
键-值对是两个相关联的值。
指定键时，Python将返回与之相关联的值。
键和值之间用冒号分隔，而键-值对之间用逗号分隔。
在字典中，你想储存多少个键-值对都可以。
最简单的字典，只有一个键-值对。

要获取与键相关联的值，可依次指定字典名和放在方括号内的键。
字典中可包含任意数量的键-值对。

字典是一种动态结构，可随时在其中添加键-值对。
要添加键-值对，可依次指定字典名，用方括号括起的键和相关联的值。
注意，键-值对的排列顺序与添加顺序不同。
Python不关心键-值对的添加顺序，而只关心键和值之间的关联关系。

有时候，在空字典中添加键-值对是为了方便，而有时候必须这样。
为此，可先使用一对空的花括号定义一个字典，再分行添加各个键-值对。
使用字典来存储用户提供的数据或在编写能自动生成大量键-值对的代码时，通常都需要先定义一个空字典。

要修改字典中的值，可依次指定字典名，用方括号括起的键以及与该键相关联的新值。

对于字典中不再需要的信息，可使用del语句将相应的键-值对彻底删除。
使用del语句时，必须指定字典名和要删除的键。
注意：删除的键-值对永远消失了。

字典存储的是一个对象的多种信息，但你也可以使用字典来存储众多对象的同一种信息。
我们将一个较大的字典放在了多行中。
确定需要使用多行来定义一个字典时，先在输入左花括号后按回车键。
然后再在下一行缩进四个空格，指定第一个键-值对，并在它后面加上一个逗号。
此后你再次按回车键时，文本编辑器将自动缩进后续键-值对，且缩进量与第一个键-值对相同。
定义好字典后，在最后一个键-值对的下一行添加一个右花括号，并缩进四个空格，使其与字典中的键对齐。
另外一种不错的做法是在最后一个键-值对后面也加上逗号，为以后在下一行添加键-值对做好准备。
注意：对于较长的列表和字典，大多数编辑器都有以类似方式设置其格式的功能。